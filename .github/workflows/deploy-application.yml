name: deploy-application

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - 'provision-infrastructure'
    types:
      - completed
    branches:
      - 'main'

jobs:
  deploy_application:
    runs-on: ubuntu-latest
    env:
      PREFIX: wu-az-capp
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - id: acr-creds
      uses: azure/CLI@v1
      with:
        inlineScript: |
          ACR_URL=$(az acr list -g ${{ env.PREFIX }} --query "[].loginServer" -o tsv)
          ACR_USERNAME=$(az keyvault secret show --vault-name ${{ env.PREFIX }}-kv --name AcrPushServicePrincipalAppId --query "value" -o tsv)
          ACR_PASSWORD=$(az keyvault secret show --vault-name ${{ env.PREFIX }}-kv --name AcrPushServicePrincipalPassword --query "value" -o tsv)
          ACR_IMAGE_TAG=$(date +%s)

          echo "::add-mask::$ACR_URL"
          echo "::add-mask::$ACR_USERNAME"
          echo "::add-mask::$ACR_PASSWORD"

          echo "::set-output name=acr-url::$ACR_URL"
          echo "::set-output name=acr-username::$ACR_USERNAME"
          echo "::set-output name=acr-password::$ACR_PASSWORD"
          echo "::set-output name=acr-image-tag::$ACR_IMAGE_TAG"
    - uses: docker/login-action@v1
      with:
        registry: ${{ steps.acr-creds.outputs.acr-url }}
        username: ${{ steps.acr-creds.outputs.acr-username }}
        password: ${{ steps.acr-creds.outputs.acr-password }}
    - uses: docker/build-push-action@v2
      with:
        context: .
        file: src/AzCappHttp/Dockerfile
        push: true
        tags: ${{ steps.acr-creds.outputs.acr-url }}/${{ env.PREFIX }}-http:${{ steps.acr-creds.outputs.acr-image-tag }},${{ steps.acr-creds.outputs.acr-url }}/${{ env.PREFIX }}-http:latest
    - uses: azure/CLI@v1
      with:
        inlineScript: |
          chmod +x ${GITHUB_WORKSPACE}/deploy/application/deploy.sh
          ${GITHUB_WORKSPACE}/deploy/application/deploy.sh
